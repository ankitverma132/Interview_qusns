import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class MoveZeroInFront {
	// Write a stream program to move all zeroâ€™s to beginning of array
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[] arr = {5,0,1,8,0,0,7};
		
		List<Integer> list = Arrays.stream(arr).boxed().collect(Collectors.toList());
		
		//Method 1: create a list of zero and an list og no-zeros and merge them

		List<Integer> listOfZeros = list.stream().filter(x -> x == 0).collect(Collectors.toList());
		List<Integer> listOfNonZeros = list.stream().filter(x -> x != 0).collect(Collectors.toList());
		
		List<Integer> finalList = new ArrayList<>();
		finalList.addAll(listOfZeros);
		finalList.addAll(listOfNonZeros);
		
		System.out.println(finalList);
		//[0, 0, 0, 5, 1, 8, 7]
		
		//Method 2: using partioningBy
		
		
		Map<Boolean, List<Integer>> map = list.stream().collect(Collectors.partitioningBy(x -> x == 0));
	}

}
